name: ci

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

        os:
          - name: openbsd
            architecture: x86-64
            version: '9.2'

          - name: openbsd
            architecture: arm64
            version: '7.2'

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/cargo@v1
        with:
          command: test
          use-cross: true
          args: --target ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
      - uses: cross-platform-actions/action@v0.10.0
        with:
          operating_system: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          command: run
          use-cross: true
          args: --package io-uring-test --features io-uring-test/ci --target ${{ matrix.target }}
          run: |
            uname -a

  check-bench:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        target:
          - x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --package io-uring-bench

  check:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        toolchain:
          - nightly
          - "1.48"
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - mips64-unknown-linux-gnuabi64

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.toolchain }}
            target: ${{ matrix.target }}
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --target ${{ matrix.target }}

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: "rustfmt --check"
        run: |
          if ! rustfmt --check --edition 2018 $(find . -name '*.rs' -print); then
            printf "Please run \`rustfmt --edition 2018 \$(find . -name '*.rs' -print)\` to fix rustfmt errors.\n" >&2
            exit 1
          fi
